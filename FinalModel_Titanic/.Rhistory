load("C:/Users/Piotrek/Dropbox/Praca przejściowa Piotr Walędzik/Przejściówka_Piotr_Waledzik/drzewo decyzyjne/.RData")
library("party")
?install.packages
install.packages(party)
available.packages()
install.packages("party")
library("party")
irysy = as.data.frame(iris)
View(irysy)
library(plyr)
install.packages("plyr")
library(plyr)
irysy = rename(irysy, c("Sepal.Length"="Kielich.Długość", "Sepal.Width"="Kielich.Szerokość",
"Petal.Length"="Płatek.Długość", "Petal.Width"="Płatek.Szerokość",
"Species"="Gatunek"))
View(irysy)
?nrow
?sample
?ctree
Dzielę dane na treningowe i testowe w skali 70% i 30%
set.seed(1234)
temp = sample(2, nrow(irysy), replace=TRUE, prob=c(0.7,0.3))
trainData = irysy[temp==1,]
testData = irysy[temp==2,]
irysy.drzewo1 = ctree(Gatunek ~ Kielich.Długość + Kielich.Szerokość +
Płatek.Długość + Płatek.Szerokość, data = trainData)
plot(irysy.drzewo1)
plot(irysy.drzewo1, type="simple")
plot(irysy.drzewo1)
help("predict")
przewidywaniaTrain = predict(irysy.drzewo1)
przewidywania1 = table(przewidywaniaTrain,trainData$Gatunek)
przewidywania1
plot(przewidywania1)
przewidywaniaTest = predict(irysy.drzewo1, newdata = testData)
przewidywania2 = table(przewidywaniaTest, testData$Gatunek)
przewidywania2
plot(irysy.drzewo1, type="simple")
attach(hills)
?hills
install.packages("MASS")
install.packages("MASS")
attach(hills)
library("MASS")
attach(hills)
?lm
hills = hills
View(hills)
model.regresji = lm(dist ~ time, data = hills)
model.opis = summary(model.regresji)
model.regresji
coef(model.regresji)[1]
coef(model.regresji)
?fitted
fitted(model.regresji)
View(hills)
#typowy wykres regresji || jedna zmienna objasniająca
plot(time, dist, main="Wykres regresji liniowej")
abline(model.regresji)
grid()
?count
count(hills)
count(hills[,1])
#typowy wykres regresji || jedna zmienna objasniająca
plot(time, dist, main="Wykres regresji liniowej")
abline(model.regresji)
grid()
test = read.csv(choose.files(), header = TRUE)
test = read.csv("test.csv", header = TRUE)
setwd("C:/Users/Piotrek/Dropbox/Praca przejściowa Piotr Walędzik/Przejściówka_Piotr_Waledzik/FinalModel_Titanic")
test = read.csv("test.csv", header = TRUE)
train = read.csv("train.csv", header = TRUE)
ggplot(train, aes(x = Pclass, fill = factor(Survived))) +
#geom_bar(width=0.5) +
stat_count(width = 0.5) +
xlab("Pclass") +
ylab("Total count") +
labs(fill="Survived")
#Zaczytanie wstępnych danych
test = read.csv("test.csv", header = TRUE)
#Dane treningowe, do nauki, kto przetrwa
train = read.csv("train.csv", header = TRUE)
#Dodanie zmiennej na przetrwanie do zbioru testowego
test.survived = data.frame(Survived = rep("None",nrow(test)), test[,])
#Połączenie danych
data.combined = rbind(train, test.survived)
#Typy danych
str(data.combined) ##pokazuje typy danych w data.combined
data.combined$Pclass = as.factor(data.combined$Pclass)
data.combined$Survived = as.factor(data.combined$Survived)
#Sprawdzam dane nieobrobione
#ile przetrwało otd.
table(data.combined$Survived)
table(data.combined$Pclass)
#pakiet do wykresów
library(ggplot2)
#Założenie -> bogaci klienci częściej uchodzili z życiem
train$Pclass = as.factor(train$Pclass)
ggplot(train, aes(x = Pclass, fill = factor(Survived))) +
#geom_bar(width=0.5) +
stat_count(width = 0.5) +
xlab("Pclass") +
ylab("Total count") +
labs(fill="Survived")
